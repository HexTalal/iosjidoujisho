def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion '21.4.7075529'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "app.lrorpilla.yuuna"
        minSdkVersion 24
        targetSdkVersion 32
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
      release {
         minifyEnabled true
         signingConfig signingConfigs.debug
       
      }

      debug {
        
      }
   }

    packagingOptions {
       // Fixes duplicate libraries build issue, 
       // when your project uses more than one plugin that depend on C++ libs.
        pickFirst 'lib/**/libc++_shared.so'
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def appName = "jidoujisho_yuuna"
            def buildType = variant.buildType.name
            def architecture = output.getFilter(com.android.build.OutputFile.ABI)
            def newName

            if ("${architecture}" == "arm64-v8a") {
                architecture = "arm64"
            } else if ("${architecture}" == "armeabi-v7a") {
                architecture = "armeabi"
            }

            if (buildType == 'debug') {
                newName = "${appName}_${defaultConfig.versionName}-${architecture}-debug.apk"
            } else {
                newName = "${appName}_${defaultConfig.versionName}-${architecture}.apk"
            }
            
            outputFileName = newName
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.ankidroid:Anki-Android:api-v1.1.0'
}

// This must appear at the bottom of the file
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'